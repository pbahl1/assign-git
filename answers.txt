Q1. What is a gitignore file and what should it include for a Java project?
Ans: The gitignore file specifies which files or patterns or directories are to ignored by git before performing a commit.
These patterns could be have been generated by files at the time of project build which might not be necessary to commit in repository and hence are specifified in this gitignore file so that they can be ignored by git.
For example compiled class *.class ,  or package files *.jar

The gitignore file consists the following for Java project.
Compiled class file, a log file, blueJ files, mobile tools for Java (J2ME), package files, a virtual machine crash log file.

Q2. What does fast-forward in Git mean?
Ans: Fast forwarding is directly pointing of master's Head to your file , when there have been no changes made since to it in master since your last commit or pull. 
That means if no one else has made changes to master since the last time you pulled a file to work on, instead of creating a new comit , git will move its HEAD and point to the latest file that you were working on.

Q3. Why should you have different branches?
Ans: We should have different branches as it helps us segregate the version of files that we have worked on.
It also helps in providing flexibility for multiple people to work on the same file at the same time with different implementation which can be merged later if need be.
Branching is very useful when we are working in a project as every member can work independently without impacting anyone else's work and then later on share or merge the code with the team.
Its also helps in abstraction, as I have control over what files I want to share and what I dont.

Q4. In a project how many remote Git repositories do you usually have?
Ans: There is no bound on how many repositories you can have, however you can have only one named as origin because that is the default repository created by git when we clone an existing repository.
Though it may vary on the size of the project if you require more repositories for decreasing dependencies on project.
However it is recommended to have only ONE repository so that its easier to manage and track changes within team.